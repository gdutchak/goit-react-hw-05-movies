{"version":3,"file":"static/js/787.69ade2e0.chunk.js","mappings":"kNAIA,I,UAAA,EAJA,SAAuBA,GACnB,OAAOC,MAAM,sCAAD,OAAuCD,EAAvC,8CAAsFE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,GAC3G,E,2BCEYC,EAASC,EAAAA,GAAAA,IAAH,4CAGNC,EAAMD,EAAAA,GAAAA,IAAH,wCAIHE,EAAMF,EAAAA,GAAAA,IAAH,4CAGHG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,weA4BTK,GAASL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qP,SCEnB,EAtCkB,WACd,OAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACTjB,GAAOkB,EAAAA,EAAAA,MAAPlB,GAQR,IANAmB,EAAAA,EAAAA,YAAU,WACNC,EAAcpB,GAAIE,MAAK,SAAAC,GACnBY,EAAQZ,EACX,GACJ,GAAE,CAACH,IAEAc,EAAM,CACN,IAAQO,EAAoEP,EAApEO,YAAaC,EAAuDR,EAAvDQ,eAAgBC,EAAuCT,EAAvCS,OAAQC,EAA+BV,EAA/BU,SAAUC,EAAqBX,EAArBW,aAAczB,EAAOc,EAAPd,GAC/D0B,EAAOD,EAAaE,QAAQ,GAC5BC,EAAQL,EAAOM,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAClD,OACI,iCACI,SAACpB,EAAD,CAAQqB,KAAK,SAASC,GAAIjB,EAASkB,MAAMC,KAAzC,8BACA,UAAC9B,EAAD,YACI,UAACE,EAAD,WAAMc,GAAc,SAACb,EAAD,CAAK4B,IAAG,yCAAoCf,KAAwB,+BACpF,4BAAK,wBAAKC,KACN,wCAAgBI,EAAhB,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAII,WAEZ,oDACA,SAACnB,EAAD,CAAWwB,GAAI,SAAUC,MAAO,CAAElC,GAAAA,EAAImC,KAAMnB,EAASkB,MAAMC,MAA3D,mBACA,SAAC1B,EAAD,CAAWwB,GAAI,SAAUC,MAAO,CAAElC,GAAAA,EAAImC,KAAMnB,EAASkB,MAAMC,MAA3D,sBACA,SAAC,EAAAE,SAAD,CAAUC,SAAU,KAApB,UAA0B,SAAC,KAAD,WAIzC,CAEJ,C","sources":["utils/fetchInfoFilm.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["function fetchInfoFilm(id) {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=62f49978977e44c6bb0e3dfa31d10c8e`).then(r => r.json())\n}\n\nexport default fetchInfoFilm;","import { NavLink, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const Border = styled.div`\nmargin: 10px 15px;\n`\nexport const Div = styled.div`\ndisplay: flex;\n`\n\nexport const Img = styled.img`\nmargin-right: 15px\n`\nexport const LinkActor = styled(NavLink)`\ndisplay: block;\nwidth: 90px;\nheight: 25px;\nborder: 1px solid grey;\ncolor: black;\ntext-decoration: none;\nborder-radius: 4px;\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\n\n&:active {\n    border: 1px solid green;\n    background-color: grey;\n    color: white;\n}\n\n&:hover:not(:active), &:focus:not(:active) {\n    border: 1px solid green;\n    background-color: grey;\n    color: white;\n}\n&:not(:last-child) {\n    margin-bottom: 10px;\n}\n`\n\nexport const Button = styled(Link)`\nwidth: 90px;\nheight: 20px;\nborder: 1px dashed black;\nbackground-color: darkslategrey;\ncolor: white;\ntext-decoration: none;\nmargin-left: 20px;\ncursor: pointer;\n\n&:hover, &:focus{\n    border: 2px solid green;\n}\n`\n","import { Suspense, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport fetchInfoFilm from \"utils/fetchInfoFilm\";\nimport { Border, Button, Div, Img, LinkActor } from \"./MovieDetails.styled\";\n\nconst InfoFilms = () => {\n    const [info, setInfo] = useState(null);\n    const location = useLocation();\n    const { id } = useParams();\n\n    useEffect(() => {\n        fetchInfoFilm(id).then(r => {\n            setInfo(r)\n        })\n    }, [id])\n\n    if (info) {\n        const { poster_path, original_title, genres, overview, vote_average, id } = info;\n        const vote = vote_average.toFixed(0);\n        const genre = genres.map(({ name }) => name).join(', ');\n        return (\n            <>\n                <Button type=\"button\" to={location.state.from}> &#x2190; Go back</Button>\n                <Border>\n                    <Div>{poster_path ? <Img src={`https://image.tmdb.org/t/p/w300${poster_path}`}></Img> : \"We couldn`t found this foto\"}\n                        <div><h1>{original_title}</h1>\n                            <p>User score: {vote}%</p>\n                            <h2>Overview</h2>\n                            <p>{overview}</p>\n                            <h3>Genres</h3>\n                            <p>{genre}</p>\n                        </div></Div>\n                    <p>Additional information:</p>\n                    <LinkActor to={'actors'} state={{ id, from: location.state.from }} >Cast</LinkActor>\n                    <LinkActor to={'review'} state={{ id, from: location.state.from }}>Reviews</LinkActor>\n                    <Suspense fallback={null}><Outlet /></Suspense>\n                </Border>\n            </>\n        )\n    }\n\n}\n\nexport default InfoFilms;"],"names":["id","fetch","then","r","json","Border","styled","Div","Img","LinkActor","NavLink","Button","Link","useState","info","setInfo","location","useLocation","useParams","useEffect","fetchInfoFilm","poster_path","original_title","genres","overview","vote_average","vote","toFixed","genre","map","name","join","type","to","state","from","src","Suspense","fallback"],"sourceRoot":""}