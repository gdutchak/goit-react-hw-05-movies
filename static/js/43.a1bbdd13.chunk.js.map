{"version":3,"file":"static/js/43.a1bbdd13.chunk.js","mappings":"yNAGA,I,QAAA,EAHA,SAA6BA,GACzB,OAAOC,MAAM,4FAAD,OAA6FD,IAASE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,GAC3H,E,kBCMYC,GALOC,EAAAA,GAAAA,GAAH,gDAKKA,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6TAoBNE,EAAQF,EAAAA,GAAAA,MAAH,qHASLG,EAAYH,EAAAA,GAAAA,OAAH,mO,SCMtB,EAtC4B,WAAO,IAAD,EAC9B,GAAoCI,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAI,UAAGF,EAAOG,IAAI,iBAAd,QAA2B,GAC/BC,GAAWC,EAAAA,EAAAA,MACjB,GAAeT,EAAAA,EAAAA,UAASM,GAAjBI,GAAP,eAsBA,OATAC,EAAAA,EAAAA,YAAU,WACDD,GAGDJ,IAASI,GACTE,EAAoBN,GAAMd,MAAK,SAAAC,GAAC,OAAIS,EAAcT,EAAEoB,QAApB,GAEvC,GAAE,CAACP,EAAMI,KAGN,iCACI,SAACZ,EAAD,CAAOQ,KAAK,OAAOQ,QAAS,SAAAC,GAAC,OAAIV,EAAqB,KAAXD,EAAgB,CAAEA,OAAQW,EAAEC,OAAO1B,OAAU,CAAC,EAA5D,EAAgEA,MAAOgB,KACpG,SAACP,EAAD,CAAWkB,KAAK,SAASC,QAvBf,WACd,GAAKZ,EAIL,OAAIA,EACOM,EAAoBN,GACtBd,MAAK,SAAAC,GAAC,OAAIS,EAAcT,EAAEoB,QAApB,SAFf,EAHIM,MAAM,yBAOb,EAcO,oBACClB,EAAaA,EAAWmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACzB,SAAC3B,EAAD,CAAiB4B,MAAO,CAAEC,KAAMhB,GAAYiB,GAAE,UAAKJ,GAAnD,SAA0DC,GAA7CD,EADY,IAC6D,MAC1F,SAAC,EAAAK,SAAD,CAAUC,SAAU,KAApB,UAA0B,SAAC,KAAD,QAGrC,C","sources":["utils/fetchFilmsCoreWords.js","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["function fetchFilmsCoreWords(value) {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=62f49978977e44c6bb0e3dfa31d10c8e&query=${value}`).then(r => r.json())\n}\nexport default fetchFilmsCoreWords;","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin:0;\npadding:0;\n`\n\nexport const LinkEl = styled(NavLink)`\ndisplay: block;\nwidth: 50%;\nmargin: 0 15px;\npadding: 6px;\ntext-decoration: none;\nborder: 1px solid grey;\nborder-radius: 4px;\ncolor: black;\n\n&:not(:last-child) {\n    margin-bottom: 8px;\n}\n&:active {\n    color: green;\n    border: 1px solid green;\n    background-color: grey;\n}\n`\n\nexport const Input = styled.input`\noutline: none;\nmargin: 0 10px 10px;\n\n&:hover, &:focus {\n    border: 1px solid green;\n}\n`\n\nexport const ButtonInp = styled.button`\nmargin-bottom: 10px;\ndisplay: inline-block;\nwidth: 75px;\nheight: 20px;\nborder: 1px solid grey;\n\n&:hover, &:focus {\n    border: 1px solid green;\n    background-color: grey;\n    color: white;\n}\n`","import { Suspense, useState, useEffect } from \"react\";\nimport { Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport fetchFilmsCoreWords from \"utils/fetchFilmsCoreWords\";\nimport { ButtonInp, Input, LinkEl } from \"./Movies.styled\";\n\nconst FetchFilmsCoreWords = () => {\n    const [collection, setCollection] = useState(null);\n    const [search, setSearch] = useSearchParams();\n    const name = search.get('search') ?? '';\n    const location = useLocation();\n    const [data] = useState(name);\n\n    const findFilms = () => {\n        if (!name) {\n            alert(\"Please write the name!\")\n            return\n        }\n        if (name) {\n            return fetchFilmsCoreWords(name)\n                .then(r => setCollection(r.results))\n        }\n    }\n\n    useEffect(() => {\n        if (!data) {\n            return\n        }\n        if (name === data) {\n            fetchFilmsCoreWords(name).then(r => setCollection(r.results))\n        }\n    }, [name, data])\n\n    return (\n        <>\n            <Input name=\"name\" onInput={e => setSearch(search !== '' ? { search: e.target.value } : {})} value={name}></Input>\n            <ButtonInp type=\"submit\" onClick={findFilms}>Search</ButtonInp>\n            {collection ? collection.map(({ id, original_title }) =>\n                <LinkEl key={id} state={{ from: location }} to={`${id}`}>{original_title}</LinkEl>) : null}\n            <Suspense fallback={null}><Outlet /></Suspense>\n        </>\n    )\n}\n\nexport default FetchFilmsCoreWords;"],"names":["value","fetch","then","r","json","LinkEl","styled","NavLink","Input","ButtonInp","useState","collection","setCollection","useSearchParams","search","setSearch","name","get","location","useLocation","data","useEffect","fetchFilmsCoreWords","results","onInput","e","target","type","onClick","alert","map","id","original_title","state","from","to","Suspense","fallback"],"sourceRoot":""}